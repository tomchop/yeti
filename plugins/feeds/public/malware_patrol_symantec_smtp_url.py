from datetime import timedelta
import logging

from core.observables import Url
from core.feed import Feed
from core.errors import ObservableValidationError


class MalwarePatrolSymantecSMTPURL(Feed):
    default_values = {
        'frequency': timedelta(hours=1),
        'source': 'https://lists.malwarepatrol.net/cgi/getfile?receipt=f1514163595&product=8&list=symantec_smtp_security',
        'name': 'MalwarePatrolSymantecSMTPURL',
        'description': 'Malware Patrol Symantec SMTP URL blocklist.'
    }

    def update(self):
        for line in self.update_lines():
            self.analyze(line)

    def analyze(self, line):
        if line.startswith('#'):
            return

        try:
            parts = line.split('"')
            url = str(parts[1])
            context = {
                'source': self.name
            }

            try:
                url = Url.get_or_create(value=url)
                url.add_context(context)
                url.add_source('feed')
                url.tag(['smtp'])
            except ObservableValidationError as e:
                logging.error(e)
        except Exception as e:
            logging.debug(e)
